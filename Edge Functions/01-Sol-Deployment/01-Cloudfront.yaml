AWSTemplateFormatVersion: '2010-09-09'
Resources:
  RedirectBucket:
    Type: AWS::S3::Bucket
  cloudfrontoriginaccessidentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: cff-OAI
  CffBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
     Bucket: !Ref RedirectBucket
     PolicyDocument:
      Statement:
        - Action:
            - 's3:GetObject'
          Effect: Allow
          Resource: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref RedirectBucket
              - /*
          Principal: 
            CanonicalUser: !GetAtt cloudfrontoriginaccessidentity.S3CanonicalUserId
  myWaf:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: edge-redirect-waf-acl
      Scope: CLOUDFRONT
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        SampledRequestsEnabled: false
        CloudWatchMetricsEnabled: true
        MetricName: edge-redirect-waf-metric
      Rules:
        - Name: AWSBotControlRule
          Priority: 0
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: false
            CloudWatchMetricsEnabled: true
            MetricName: edge-redirect-waf-metric-bot
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesBotControlRuleSet 
  EdgeRedirectDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: "Edge Redirect Workshop Distribution"
        Origins:
        - DomainName: !GetAtt RedirectBucket.DomainName
          Id: myS3Origin
          S3OriginConfig:
            OriginAccessIdentity: !Join ['', ['origin-access-identity/cloudfront/', !Ref cloudfrontoriginaccessidentity]]
        Enabled: 'true'
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: myS3Origin
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        PriceClass: PriceClass_100
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: edge-redirect-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: logaccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*